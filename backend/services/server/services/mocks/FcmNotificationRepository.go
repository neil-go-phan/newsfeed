// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	entities "server/entities"

	mock "github.com/stretchr/testify/mock"
)

// FcmNotificationRepository is an autogenerated mock type for the FcmNotificationRepository type
type FcmNotificationRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: FcmNotification
func (_m *FcmNotificationRepository) Create(FcmNotification entities.FcmNotification) error {
	ret := _m.Called(FcmNotification)

	var r0 error
	if rf, ok := ret.Get(0).(func(entities.FcmNotification) error); ok {
		r0 = rf(FcmNotification)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// List provides a mock function with given fields:
func (_m *FcmNotificationRepository) List() ([]entities.FcmNotification, error) {
	ret := _m.Called()

	var r0 []entities.FcmNotification
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]entities.FcmNotification, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []entities.FcmNotification); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entities.FcmNotification)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewFcmNotificationRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewFcmNotificationRepository creates a new instance of FcmNotificationRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFcmNotificationRepository(t mockConstructorTestingTNewFcmNotificationRepository) *FcmNotificationRepository {
	mock := &FcmNotificationRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
